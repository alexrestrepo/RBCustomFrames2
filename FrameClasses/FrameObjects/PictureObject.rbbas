#tag ClassProtected Class PictureObjectInherits FrameObject	#tag Event		Function calculateHeight() As integer		  if view = nil then Return 32		  Return view.Height		End Function	#tag EndEvent	#tag Event		Sub Highlight(g as graphics, basex as integer, basey as integer)		  //and if it needs to be highlighted... a small Frame around it		  g.ForeColor = &c2F75D8		  g.PenWidth = 2		  g.PenHeight = 2		  g.DrawRoundRect x/2 + basex, y + basey, Width + x,Height+1, 5 ,5		  		End Sub	#tag EndEvent	#tag Event		Sub init()		  view = scaleToFit(image, min(Width, image.Width), min(width, image.Height))		End Sub	#tag EndEvent	#tag Event		Sub LinkPerformed()		  view = scaleToFit(image, Width, Height)		End Sub	#tag EndEvent	#tag Event		Sub Paint(g as graphics)		  g.DrawPicture view, x + (Width - view.Width)/2, y		  g.ForeColor = &cAAAAAA		  g.DrawRect x + (Width - view.Width)/2, y,view.Width,view.Height		End Sub	#tag EndEvent	#tag Method, Flags = &h0		Sub Constructor(image as picture)		  self.Image = Image		  acceptsConnections = true		End Sub	#tag EndMethod	#tag Method, Flags = &h21		Private Function scaleToFit(pic as picture, w as integer, h as integer) As picture		  dim p as picture		  dim ratio as single		  dim a,b,xoff,yoff as integer		  if pic <> nil then		    a=pic.width		    b=pic.height		    ratio = Min( w / a, h / b )		    		    p=newpicture(pic.width * ratio, pic.height * ratio,32)		    if pic.width<=w and pic.height<=h then		      		      p.graphics.drawpicture pic,(p.Width-pic.width)/2,(p.Height-pic.height)/2		      		    else		      a=a*ratio		      b=b*ratio		      		      p.graphics.drawpicture pic,0,0,a,b,0,0,pic.width,pic.height		    end if		    		    return p		  end if		End Function	#tag EndMethod	#tag Note, Name = About		PictureObject		By Alex Restrepo		send comments, suggestions, fixes to alexrestrepo@mac.com				A Picture-object to be displayed in a FrameObject				Open source under the Creative Commons Attribution License: If you decide to use it in your projects, please give me credit in your about window or documentation.		Use in whatever way you like... at your own risk :P		let me know if you find it useful.					#tag EndNote	#tag Property, Flags = &h21		Private image As picture	#tag EndProperty	#tag Property, Flags = &h21		Private view As picture	#tag EndProperty	#tag ViewBehavior		#tag ViewProperty			Name="acceptsConnections"			Group="Behavior"			InitialValue="0"			Type="boolean"			InheritedFrom="FrameObject"		#tag EndViewProperty		#tag ViewProperty			Name="handlesMouseEvents"			Group="Behavior"			InitialValue="0"			Type="boolean"			InheritedFrom="FrameObject"		#tag EndViewProperty		#tag ViewProperty			Name="Index"			Visible=true			Group="ID"			InitialValue="-2147483648"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Left"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Name"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Super"			Visible=true			Group="ID"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Top"			Visible=true			Group="Position"			InitialValue="0"			InheritedFrom="Object"		#tag EndViewProperty		#tag ViewProperty			Name="Width"			Group="Behavior"			InitialValue="0"			Type="Integer"			InheritedFrom="RectObject"		#tag EndViewProperty		#tag ViewProperty			Name="X"			Group="Behavior"			InitialValue="0"			Type="Integer"			InheritedFrom="RectObject"		#tag EndViewProperty		#tag ViewProperty			Name="Y"			Group="Behavior"			InitialValue="0"			Type="Integer"			InheritedFrom="RectObject"		#tag EndViewProperty	#tag EndViewBehaviorEnd Class#tag EndClass